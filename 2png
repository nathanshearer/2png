#!/bin/bash

NAME="2png"
CODENAME="twopng"
COPYRIGHT="Copyright (C) 2017 Nathan Shearer"
LICENSE="GNU General Public License 2.0"
VERSION="1.0.0.0"

# \brief Ensures dependencies are present
# \param $@ The dependencies to check for
function twopng_check_dependencies
{
	for TOOL in "$@"; do
		if ! type "$TOOL" >/dev/null 2>/dev/null; then
			echo "$CODENAME: \"$TOOL\" is required for this application to work correctly." >&2
			exit
		fi
	done
}

# Convert $1 into a png file
# \param $1 The input file to convert
# \param $2 The output file name
function twopng_convert
{
	echo "‘$1’ -> ‘$2’"
	local TMPUUID=$RANDOM
	dcraw -w -c "$1" > "/tmp/$CODENAME.$$.$TMPUUID.ppm"
	convert "/tmp/$CODENAME.$$.$TMPUUID.ppm" "/tmp/$CODENAME.$$.$TMPUUID.png"
	if type pngcrush >/dev/null 2>/dev/null; then
		pngcrush -brute -warn "/tmp/$CODENAME.$$.$TMPUUID.png" "/tmp/$CODENAME.$$.$TMPUUID.crushed.png"
		mv -f "/tmp/$CODENAME.$$.$TMPUUID.crushed.png" "/tmp/$CODENAME.$$.$TMPUUID.png"
	fi
	exiftool -q -overwrite_original -tagsFromFile "$1" "/tmp/$CODENAME.$$.$TMPUUID.png"
	local FILENAME=$(echo -n "$1" | sed -r "s/(.*)\\.[^.]+/\\1/")
	if [ -f "$FILENAME.jpg" ]; then
		exiftool -q -overwrite_original -tagsFromFile "$FILENAME.jpg" "/tmp/$CODENAME.$$.$TMPUUID.png"
	fi
	mv $MV_ARGS "/tmp/$CODENAME.$$.$TMPUUID.png" "$2"
	rm -f "/tmp/$CODENAME.$$.$TMPUUID"*
	if [ -e "$2" ] && $DELETE; then
		rm -f "$1"
		rm -f "$FILENAME".[jJ][pP][gG]
	fi
}

# \brief Displays the help and exits the program
function toopng_help
{
	#     01234567890123456789012345678901234567890123456789012345678901234567890123456789
	echo "Description:"
	echo "  Convert files to PNG files."
	echo
	echo "Usage:"
	echo "  $CODENAME [options] file..."
	echo
	echo "Options:"
	echo "  -d, --delete"
	echo "    Delete the source file (and it's accompanying jpg file if one is present)."
	echo "    This option is disabled by default."
	echo "  -f, --force"
	echo "    Overwrite existing files. Disabled by default."
	echo "    If more than one of -f and -n are specified then only the final one takes"
	echo "    effect."
	echo "  -n, --no-clobber"
	echo "    Do not overwrite files. Enabled by default."
	echo "    If more than one of -f and -n are specified then only the final one takes"
	echo "    effect."
	echo "  -h, --help"
	echo "    Display this help message and exit."
	echo
	echo "Examples:"
	echo "  $CODENAME -d foo.dng bar.dng"
	echo
	echo "Version:"
	echo "  $NAME $VERSION"
	echo "  $COPYRIGHT"
	echo "  Licensed under $LICENSE"
	exit
}

function twopng_main
{
	local FILE_EXTENSION=""
	local FILE_NAME=""

	while [ $# -ne 0 ]; do
		unset PROCESSES
		for THREAD in $(seq 1 $THREADS); do
			if [ $# -eq 0 ]; then break; fi
			if [ ! -f "$1" ]; then
				echo "File does not exist: \"$1\""
				return 1
			fi
			FILE_EXTENSION=$(echo -n "$1" | sed -r "s/.*\\.([^.]+)/\\1/")
			if [ "$FILE_EXTENSION" != "png" ]; then
				FILE_NAME=$(echo -n "$1" | sed -r "s/(.*)\\.[^.]+/\\1/")
				twopng_convert "$1" "$FILE_NAME.png" &
			fi
			PROCESSES[${#PROCESSES[@]}]=$!
			shift
		done
		wait "${PROCESSES[@]}"
	done
}

#------------------------------------------------------------------------------
# default configuration
#

MV_ARGS="-n"
THREADS=$(grep -c processor /proc/cpuinfo)

#------------------------------------------------------------------------------
# command line arguments
#

if [ $# -eq 0 ]; then
	toopng_help
	exit 1
fi

if [ ! -f "$1" -a "$1" = "-h" ]; then
	toopng_help
	exit 1
fi
if [ ! -f "$1" -a "$1" = "--help" ]; then
	toopng_help
	exit 1
fi

DELETE=false
if [ ! -f "$1" -a "$1" = "-d" ]; then
	DELETE=true
	shift
fi
if [ ! -f "$1" -a "$1" = "--delete" ]; then
	DELETE=true
	shift
fi

if [ ! -f "$1" -a "$1" = "-f" ]; then
	MV_ARGS="$MV_ARGS -f"
	shift
fi
if [ ! -f "$1" -a "$1" = "--force" ]; then
	MV_ARGS="$MV_ARGS -f"
	shift
fi

if [ ! -f "$1" -a "$1" = "-n" ]; then
	MV_ARGS="$MV_ARGS -n"
	shift
fi
if [ ! -f "$1" -a "$1" = "--no-clobber" ]; then
	MV_ARGS="$MV_ARGS -n"
	shift
fi

#------------------------------------------------------------------------------
# prepare environment

twopng_check_dependencies dcraw convert exiftool

#------------------------------------------------------------------------------
# begin execution

twopng_main "$@"
